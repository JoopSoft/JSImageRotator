SECOND VERSE OF MODULE
---------------------------------------------------------------

* All Text field must be validated by RequiredFieldValidator control:
	Ex.: <asp:requiredfieldvalidator id="valPassword" runat="server" cssclass="NormalRed" display="Dynamic" errormessage="<br>Password Is Required."
				controltovalidate="txtPassword" resourcekey="valPassword"></asp:requiredfieldvalidator></td>
		 <asp:comparevalidator id="valConfirm2" runat="server" cssclass="NormalRed" display="Dynamic" errormessage="<br>Password Values Entered Do Not Match."
		 	controltovalidate="txtConfirm" resourcekey="valConfirm2" controltocompare="txtPassword"></asp:comparevalidator></td>
		 <asp:regularexpressionvalidator id="valEmail2" runat="server" cssclass="NormalRed" display="Dynamic" errormessage="<br>Email Must be Valid."
		 	controltovalidate="txtEmail" resourcekey="valEmail2" validationexpression="[\w\.-]+(\+[\w-]*)?@([\w-]+\.)+[\w-]+"></asp:regularexpressionvalidator></td>

[ADD IMAGE]: > 2ND VERSE
		Add dropdown to select "slideType": "Image", "Video" (Default value : Image) before Image upload group.
		If video selected adding two new checkboxes:
			- loop: true/false {Default: false}
			- mute: true/false {Default: true}
	
SETTINGS: > 2ND VERSE
	Animation and Transition should be with example box (How it looks like each effects) 

*Slide settings: > 2ND VERSE 
	са доста повече от 'animation' and 'transition'
------------------------------------------------------------------------


!!! Да се помисли в EDIT: UPDATE LIST > SELECT LIST from available > checkbox dont work..

DONE: !SETTINGS: txtMinHeight - нов запис DB за мин. височина на container.. Да се генерира в
	  JSON структурата само когато е избран {Rotator Type:Container} като: "minHeight" : value, 
      Set this value via Main.js..

Partialy DONE: Limiting to 100 and JSON fill Left: !SETTINGS: Align and Valign settings should be saved to DB..

Partialy DONE: Needs Consulting about JSON
"OVERLAY PATH" didn't save on DB.. Има ли логика да бъде..
!SETTINGS: 'cbOverlay' replaced with 'ddOverlay' with options:
	ddOverlay - трябва да има възможност да записва/генерира JSON в {Bool:true/false и String:path}.
	path - ще се показва нов дропдаун с типовете от overlay folder.
	true - си сетва по подразбиране негов заложен в кода на плъгина.
	false - не показва overlay.

*Notes: All props in JSON structure should be starting with lowercase letter in json structure..

*Checking for default values (Should be equal to SQL Request/Install module):
        slide:              0,
        delay:              5000,
        preload:            false,
        preloadImage:       false,
        preloadVideo:       false,
        timer:              true,
        overlay:            false,
        autoplay:           true,
        shuffle:            false,
        cover:              true,
        color:              null,
        align:              'center',
        valign:             'center',
        transition:         'fade',
        transitionDuration: 1000,
        transitionRegister: [],
        animation:          null,
        animationDuration:  'auto',
        animationRegister:  [],


ADD NEW IMAGE: Add to list checkbox should be on left side..

MAIN.JS: OPTIMIZING CODE..
ALL JS script code also..

DONE: EDIT: Имаме ли създаден лист вече, да бъде активен UPDATE LIST вместо CREATE NEW LIST..

VIEW: Да проверяваме дали имаме генериран {moduleId}_settings.json && {moduleId}_slides.json (empty) -ако нямаме да се ползва Default_Settings.json
	(JavaScript не може да се ползва за достъп до файловата система поради секюрити причини)

DONE:	DEFAULT SLIDES JSON:
	{
	"slides":
	[
	  {
	    "src": "",
	    "transition": "",
	    "animation": "",
	    "title": "",
	    "description": "",
	    "photographer": "",
	    "contact": ""
	  }
	]
	}

DONE: SELECT, EDIT, ADDIMAGE, SETTINGS: JoopSOFT.com link

DONE: add install icons to .rar

-----------------------------------------------------------------
JSON Structure:
-----------------------------------------------------------------
{
"slides": [
  {
    "slideType": "image",
    "src": "/DesktopModules/JSImageRotator/Images/IMG_1981.JPG",
    "video": null,
    "Title": "Shiroka Laka village",
    "Description": "image desc",
    "Photographer": "Mihail Hubchev",
    "Contact": "m.hubchev@abv.bg"
  },
  {
    "slideType": "video",
    "src": "/DesktopModules/JSImageRotator/Images/IMG_1981.JPG",
    "video": {
        "src": "/DesktopModules/JSImageRotator/Videos/IMG_1981.mp4",
        "loop": false,
        "mute": true      
    },
    "Title": "Shiroka Laka village",
    "Description": "image desc",
    "Photographer": "Mihail Hubchev",
    "Contact": "m.hubchev@abv.bg"
  },
  {
    "slideType": "video",
    "src": "/DesktopModules/JSImageRotator/Images/IMG_1981.JPG",
    "video": {
        "src": [
            "/DesktopModules/JSImageRotator/Videos/IMG_1981.mp4",
            "/DesktopModules/JSImageRotator/Videos/IMG_1981.webm",
            "/DesktopModules/JSImageRotator/Videos/IMG_1981.ogv"
            ],
        "loop": false,
        "mute": true
        }    
    },
    "Title": "Shiroka Laka village",
    "Description": "image desc",
    "Photographer": "Mihail Hubchev",
    "Contact": "m.hubchev@abv.bg"
]
}
---------------------------------------------------------------
VEGAS settings structure
---------------------------------------------------------------
"settings": [
    "rotatorType": "body",          // {string:body/container}
    "ppControl": true,              // {true/false}
    "slideInfo": true,              // {true/false}
    "slide": 0,                     // {number}
    "preload": false,               // {true/false}
    "preloadImage": false,          // preload must be false
    "preloadVideo": false,          // preload must be false
    "timer": true,                  // {true/false}
    "overlay": false,               // {true/false/string:path}
    "autoplay": true,               // {true/false}
    "shuffle": false,               // {true/false}
    "delay": 5000,                  // {number}
    "cover": true,                  // {true/false/string:repeat}
    "backgroundColor": null,        // HEX or RGBA colors
    
    "align": "center",              // {string/number}    
    "vAlign": "center",             // {string/number}
    
    "transition": "random",         // {string/array}
    "transitionDuration": 1000,     // {number/string:auto}
    "transitionRegister": null,     // {string/array}
    
    "animation": "random",          // {string/array}
    "animationDuration": "auto",    // {number/string:auto}
    "animationRegister": null       // {string/array}
    ]
}